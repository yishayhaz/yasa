@mixin light-theme {
  --s-neutral-bg: var(--neutral-100);
  --s-neutral-text: var(--neutral-900);

  --s-neutral-100: var(--neutral-100);
  --s-neutral-200: var(--neutral-200);
  --s-neutral-300: var(--neutral-300);
  --s-neutral-400: var(--neutral-400);
  --s-neutral-500: var(--neutral-500);
  --s-neutral-600: var(--neutral-600);
  --s-neutral-700: var(--neutral-700);
  --s-neutral-800: var(--neutral-800);
  --s-neutral-900: var(--neutral-900);
}

@mixin dark-theme {
  --s-neutral-bg: var(--neutral-900);
  --s-neutral-text: var(--neutral-100);

  --s-neutral-100: var(--neutral-900);
  --s-neutral-200: var(--neutral-800);
  --s-neutral-300: var(--neutral-700);
  --s-neutral-400: var(--neutral-600);
  --s-neutral-500: var(--neutral-500);
  --s-neutral-600: var(--neutral-400);
  --s-neutral-700: var(--neutral-300);
  --s-neutral-800: var(--neutral-200);
  --s-neutral-900: var(--neutral-100);
}

$light: rgb(var(--light));
$dark: rgb(var(--dark));

$neutral: rgb(var(--neutral));
$s-neutral: rgb(var(--neutral));

$s-neutral-bg: rgb(var(--s-neutral-bg));
$s-neutral-text: rgb(var(--s-neutral-text));
$s-neutral-100: rgb(var(--s-neutral-100));
$s-neutral-200: rgb(var(--s-neutral-200));
$s-neutral-300: rgb(var(--s-neutral-300));
$s-neutral-400: rgb(var(--s-neutral-400));
$s-neutral-500: rgb(var(--s-neutral-500));
$s-neutral-600: rgb(var(--s-neutral-600));
$s-neutral-700: rgb(var(--s-neutral-700));
$s-neutral-800: rgb(var(--s-neutral-800));
$s-neutral-900: rgb(var(--s-neutral-900));

$neutral-bg: rgb(var(--neutral-bg));
$neutral-text: rgb(var(--neutral-text));
$neutral-100: rgb(var(--neutral-100));
$neutral-200: rgb(var(--neutral-200));
$neutral-300: rgb(var(--neutral-300));
$neutral-400: rgb(var(--neutral-400));
$neutral-500: rgb(var(--neutral-500));
$neutral-600: rgb(var(--neutral-600));
$neutral-700: rgb(var(--neutral-700));
$neutral-800: rgb(var(--neutral-800));
$neutral-900: rgb(var(--neutral-900));

$s-neutrals: (
  bg: $s-neutral-bg,
  text: $s-neutral-text,
  100: $s-neutral-100,
  200: $s-neutral-200,
  300: $s-neutral-300,
  400: $s-neutral-400,
  500: $s-neutral-500,
  600: $s-neutral-600,
  700: $s-neutral-700,
  800: $s-neutral-800,
  900: $s-neutral-900,
);

$neutrals: (
  bg: $neutral-bg,
  text: $neutral-text,
  100: $neutral-100,
  200: $neutral-200,
  300: $neutral-300,
  400: $neutral-400,
  500: $neutral-500,
  600: $neutral-600,
  700: $neutral-700,
  800: $neutral-800,
  900: $neutral-900,
);

$primary: rgb(var(--primary));
$success: rgb(var(--success));
$warning: rgb(var(--warning));
$danger: rgb(var(--danger));

$theme: (
  light: $light,
  dark: $dark,
  neutral: $neutral,
  s-neutrals: (
    prefix: "-s-neutral-",
    list: $s-neutrals,
  ),
  neutrals: (
    prefix: "-neutral-",
    list: $neutrals,
  ),
  primary: $primary,
  success: $success,
  warning: $warning,
  danger: $danger,
);

@mixin theme-to-classes($theme: $theme, $prefix: "-") {
  @each $name, $color in $theme {
    @if type-of($color) == "map" {
      @include theme-to-classes(map-get($color, list), map-get($color, prefix));
    } @else {
      .color#{$prefix}#{$name} {
        color: $color;
      }

      .bg#{$prefix}#{$name} {
        background-color: $color;
      }
    }
  }
}

@mixin theme() {
  --light: 255, 255, 255;
  --dark: 27, 27, 39;

  --neutral-100: var(--light);
  --neutral-200: 242, 242, 248;
  --neutral-300: 233, 234, 241;
  --neutral-400: 197, 199, 216;
  --neutral-500: 96, 106, 123;
  --neutral-600: 79, 87, 105;
  --neutral-700: 55, 59, 78;
  --neutral-800: 39, 41, 58;
  --neutral-900: var(--dark);

  --neutral: var(--neutral-500);
  --neutral-bg: var(--neutral-100);
  --neutral-text: var(--neutral-900);

  --primary: 0, 123, 255;

  --success: 41, 168, 71;

  --warning: 255, 193, 5;

  --danger: 220, 56, 72;

  @include theme-to-classes;
}
